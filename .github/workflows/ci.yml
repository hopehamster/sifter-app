# CI workflow for Sifter App
# Current state:
# - Test job: Running all tests and code quality checks
# - Build job: Building APK and iOS app
# - Deployment: Temporarily disabled until Firebase setup is complete
# Last updated: 2024-03-19
# Status: Enabled and ready to run

name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: flutter analyze

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        if: env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          fail_ci_if_error: true

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    steps:
      - uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --release

      - name: Build iOS
        run: flutter build ios --release
        if: runner.os == 'macos'

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error

  # Deployment job is commented out until Firebase setup is complete
  # deploy:
  #   name: Deploy
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Download APK
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: release-apk
  #         path: build/app/outputs/flutter-apk
  #     - name: Deploy to Firebase App Distribution
  #       uses: wzieba/Firebase-Distribution-Github-Action@v1
  #       with:
  #         appId: ${{ secrets.FIREBASE_APP_ID }}
  #         token: ${{ secrets.FIREBASE_TOKEN }}
  #         groups: testers
  #         file: build/app/outputs/flutter-apk/app-release.apk 