# Uncomment this line to define a global platform for your project
platform :ios, '15.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  target 'RunnerTests' do
    inherit! :search_paths
  end

  # pod 'GoogleUtilities', '7.13.0'
  # pod 'GoogleUtilities/UserDefaults', '7.13.0'
  # pod 'GoogleAppMeasurement', '10.25.0'
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        'PERMISSION_CAMERA=1',
        'PERMISSION_PHOTOS=1',
        'PERMISSION_LOCATION=1',
        'PERMISSION_NOTIFICATIONS=1'
      ]
      
      # Ensure we're using the correct compiler
      config.build_settings['COMPILER_INDEX_STORE_ENABLE'] = 'NO'
      config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
    end
    
    # PROVEN FIX: Set the correct C++ language standard for abseil compatibility
    if target.name == 'abseil'
      puts "ðŸ”§ Applying abseil C++ language standard fix for CocoaPods 1.16+ compatibility"
      target.build_configurations.each do |config|
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'gnu++14'
      end
    end
    
    # PROVEN FIX: Remove the -GCC_WARN_INHIBIT_ALL_WARNINGS flag that causes the -G error
    if target.name == 'BoringSSL-GRPC'
      target.source_build_phase.files.each do |file|
        if file.settings && file.settings['COMPILER_FLAGS']
          flags = file.settings['COMPILER_FLAGS']
          if flags.include?('-GCC_WARN_INHIBIT_ALL_WARNINGS')
            # Replace the problematic flag with a safe alternative
            file.settings['COMPILER_FLAGS'] = flags.gsub('-GCC_WARN_INHIBIT_ALL_WARNINGS', '-w')
          end
        end
      end
      puts "âœ… Fixed BoringSSL-GRPC compiler flags"
    end
    
    # PROVEN FIX: Set C++17 standard for gRPC targets to handle template parsing
    if ['gRPC-Core', 'gRPC-C++'].include?(target.name)
      target.build_configurations.each do |config|
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'YES'
      end
      puts "âœ… Fixed #{target.name} C++ standard and warnings"
    end
  end
  
  # AUTOMATIC FIX: Fix gRPC template parsing error that causes Xcode 16.3 build failure
  grpc_files = [
    'gRPC-Core/src/core/lib/promise/detail/basic_seq.h',
    'gRPC-C++/src/core/lib/promise/detail/basic_seq.h'
  ]
  
  grpc_files.each do |file_path|
    full_path = File.join(installer.sandbox.root, file_path)
    if File.exist?(full_path)
      content = File.read(full_path)
      fixed_content = content.gsub(
        'Traits::template CallSeqFactory(f_, *cur_, std::move(arg))',
        'Traits::template CallSeqFactory<>(f_, *cur_, std::move(arg))'
      )
      if content != fixed_content
        File.write(full_path, fixed_content)
        puts "âœ… Fixed gRPC template parsing error in #{file_path}"
      end
    end
  end
end
